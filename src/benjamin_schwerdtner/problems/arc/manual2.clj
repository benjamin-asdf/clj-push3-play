(ns benjamin-schwerdtner.problems.arc.manual2
  (:require
   [benjamin-schwerdtner.clj-push3-play.interpreter :as push]
   [benjamin-schwerdtner.problems.arc.data :as d]
   [benjamin-schwerdtner.clj-push3-play.stack.pushstate :as stack]
   [benjamin-schwerdtner.clj-push3-play.arc.grid-impl :as grid]
   [benjamin-schwerdtner.problems.arc.push :as arc]))

;; --------------------------------------------

(def task
  ;; (d/read-task "/home/benj/repos/ARC-AGI-2/data/training/a8d7556c.json")
  {:file "/home/benj/repos/ARC-AGI-2/data/training/a8d7556c.json"
   :test [{:input [[0 0 0 5 0 5 0 0 5 5 0 5 5 5 5 5 0 0]
                   [0 0 5 5 0 5 0 5 0 0 0 5 5 5 5 0 5 5]
                   [5 0 0 0 5 5 0 5 0 0 5 0 5 0 5 5 0 5]
                   [0 5 5 5 0 5 5 0 5 5 0 0 0 5 5 0 5 5]
                   [5 5 5 5 5 5 5 0 0 5 5 0 0 0 0 5 5 5]
                   [0 5 5 5 5 0 5 5 5 0 5 0 0 5 5 0 5 0]
                   [5 5 0 5 5 5 5 5 5 0 0 5 0 0 5 0 5 5]
                   [5 5 5 5 0 0 5 5 0 5 5 5 5 5 0 5 5 0]
                   [5 0 5 0 0 5 5 5 0 0 0 5 5 5 5 0 0 0]
                   [0 0 0 0 5 0 0 0 5 5 5 5 0 0 5 0 5 5]
                   [5 0 5 5 0 5 5 5 0 0 5 0 5 5 5 5 5 0]
                   [0 0 0 5 5 0 5 0 0 5 5 0 5 5 5 5 5 5]
                   [0 5 5 5 5 0 0 5 0 0 0 5 5 5 5 5 0 5]
                   [5 5 5 5 5 5 5 0 5 5 5 5 5 5 5 0 0 5]
                   [5 5 0 5 5 5 0 5 0 5 5 5 5 0 5 0 0 5]
                   [5 0 5 5 5 5 0 5 5 0 0 0 5 5 5 5 0 5]
                   [0 5 0 0 5 5 5 5 5 5 5 5 5 5 5 5 5 5]
                   [5 0 0 0 0 0 0 5 0 5 0 5 5 0 5 5 0 0]]
           :output [[2 2 0 5 0 5 0 0 5 5 0 5 5 5 5 5 0 0]
                    [2 2 5 5 0 5 0 5 2 2 0 5 5 5 5 0 5 5]
                    [5 0 0 0 5 5 0 5 2 2 5 0 5 0 5 5 0 5]
                    [0 5 5 5 0 5 5 0 5 5 0 2 2 5 5 0 5 5]
                    [5 5 5 5 5 5 5 0 0 5 5 2 2 0 0 5 5 5]
                    [0 5 5 5 5 0 5 5 5 0 5 2 2 5 5 0 5 0]
                    [5 5 0 5 5 5 5 5 5 0 0 5 0 0 5 0 5 5]
                    [5 5 5 5 0 0 5 5 0 5 5 5 5 5 0 5 5 0]
                    [5 0 5 0 0 5 5 5 0 0 0 5 5 5 5 0 0 0]
                    [0 0 0 0 5 0 0 0 5 5 5 5 0 0 5 0 5 5]
                    [5 0 5 5 0 5 5 5 0 0 5 0 5 5 5 5 5 0]
                    [0 0 0 5 5 0 5 0 0 5 5 0 5 5 5 5 5 5]
                    [0 5 5 5 5 0 0 5 0 0 0 5 5 5 5 5 0 5]
                    [5 5 5 5 5 5 5 0 5 5 5 5 5 5 5 2 2 5]
                    [5 5 0 5 5 5 0 5 0 5 5 5 5 0 5 2 2 5]
                    [5 0 5 5 5 5 0 5 5 0 0 0 5 5 5 5 0 5]
                    [0 5 2 2 5 5 5 5 5 5 5 5 5 5 5 5 5 5]
                    [5 0 2 2 0 0 0 5 0 5 0 5 5 0 5 5 0 0]]}]
   :train [{:input [[5 5 5 5 0 5 0 5 0 5 5 5 0 0 5 0 5 5]
                    [5 5 5 5 0 0 5 5 0 5 0 0 5 0 0 5 5 0]
                    [5 5 5 5 5 5 0 5 5 5 5 0 0 0 0 5 5 0]
                    [5 0 5 5 5 5 0 0 0 0 5 5 5 5 5 5 0 0]
                    [0 0 5 0 5 5 0 0 0 5 5 0 0 0 5 5 5 0]
                    [5 0 0 0 5 0 5 5 5 5 0 0 0 5 0 0 0 0]
                    [0 5 0 5 5 5 0 0 0 5 5 0 0 5 0 5 5 5]
                    [5 0 0 5 5 0 5 5 0 5 0 0 5 0 5 0 5 0]
                    [5 5 5 5 0 5 5 5 0 5 5 0 5 0 5 0 5 0]
                    [5 0 5 5 5 5 0 5 0 5 0 5 5 5 0 5 5 0]
                    [5 0 5 5 5 0 5 0 5 0 0 5 0 0 5 5 5 5]
                    [0 0 0 0 5 0 5 0 0 0 5 0 5 5 5 0 0 0]
                    [5 0 5 0 0 5 0 5 5 0 0 5 0 0 0 5 5 5]
                    [5 5 5 0 5 0 0 5 5 5 0 5 5 5 0 5 5 0]
                    [0 0 5 5 5 5 5 0 5 5 5 5 0 0 0 0 0 5]
                    [5 0 5 5 5 5 0 0 5 5 0 5 0 5 5 0 5 0]
                    [0 0 0 0 0 0 0 0 5 5 5 0 0 0 0 5 0 0]
                    [5 5 0 0 5 5 0 5 0 5 5 5 0 5 5 5 5 5]]
            :output [[5 5 5 5 0 5 0 5 0 5 5 5 0 0 5 0 5 5]
                     [5 5 5 5 0 0 5 5 0 5 0 0 5 2 2 5 5 0]
                     [5 5 5 5 5 5 0 5 5 5 5 0 0 2 2 5 5 0]
                     [5 0 5 5 5 5 2 2 2 0 5 5 5 5 5 5 0 0]
                     [0 0 5 0 5 5 2 2 2 5 5 2 2 0 5 5 5 0]
                     [5 0 0 0 5 0 5 5 5 5 0 2 2 5 0 0 0 0]
                     [0 5 0 5 5 5 0 0 0 5 5 2 2 5 0 5 5 5]
                     [5 0 0 5 5 0 5 5 0 5 0 0 5 0 5 0 5 0]
                     [5 5 5 5 0 5 5 5 0 5 5 0 5 0 5 0 5 0]
                     [5 0 5 5 5 5 0 5 0 5 0 5 5 5 0 5 5 0]
                     [5 0 5 5 5 0 5 0 5 0 0 5 0 0 5 5 5 5]
                     [0 0 0 0 5 0 5 0 0 0 5 0 5 5 5 0 0 0]
                     [5 0 5 0 0 5 0 5 5 0 0 5 0 0 0 5 5 5]
                     [5 5 5 0 5 0 0 5 5 5 0 5 5 5 0 5 5 0]
                     [0 0 5 5 5 5 5 0 5 5 5 5 0 0 0 0 0 5]
                     [5 0 5 5 5 5 2 2 5 5 0 5 0 5 5 0 5 0]
                     [0 0 2 2 0 0 2 2 5 5 5 0 0 0 0 5 0 0]
                     [5 5 2 2 5 5 0 5 0 5 5 5 0 5 5 5 5 5]]}
           {:input [[5 5 5 0 5 0 0 5 5 5 5 5 5 5 0 5 5 5]
                    [5 5 0 0 0 5 0 5 0 5 5 0 0 5 0 5 0 5]
                    [0 5 5 0 5 5 0 0 5 5 0 5 5 5 5 5 0 5]
                    [5 5 0 5 5 5 5 5 5 0 5 5 5 5 5 0 5 5]
                    [5 0 5 5 5 5 5 5 5 5 0 5 5 5 0 5 0 5]
                    [0 5 5 5 5 0 0 5 0 0 5 0 5 5 5 5 5 0]
                    [0 0 5 5 5 0 0 5 0 5 0 0 0 5 5 5 5 5]
                    [0 0 5 5 0 0 5 5 5 5 5 5 5 5 5 0 0 5]
                    [5 0 5 0 5 0 0 0 5 5 5 5 5 5 5 0 0 5]
                    [0 0 5 5 0 0 5 5 5 5 5 5 5 5 5 5 0 5]
                    [5 5 0 5 5 5 0 0 5 0 5 0 0 5 5 5 0 5]
                    [5 5 5 5 5 5 5 5 5 5 5 5 0 5 5 5 5 5]
                    [5 5 5 5 0 0 5 5 5 5 0 5 5 0 0 5 0 0]
                    [0 5 0 0 0 5 0 5 5 0 0 5 5 5 0 0 0 5]
                    [0 0 5 5 5 5 5 0 5 0 5 0 5 0 5 5 0 0]
                    [5 0 5 0 0 0 5 5 5 5 5 5 5 0 0 5 0 5]
                    [5 0 5 5 0 0 0 5 5 5 0 0 0 0 0 5 0 0]
                    [5 5 0 5 0 0 5 0 0 5 5 0 5 0 5 0 5 5]]
            :output [[5 5 5 0 5 0 0 5 5 5 5 5 5 5 0 5 5 5]
                     [5 5 0 0 0 5 0 5 0 5 5 0 0 5 0 5 0 5]
                     [0 5 5 0 5 5 0 0 5 5 0 5 5 5 5 5 0 5]
                     [5 5 0 5 5 5 5 5 5 0 5 5 5 5 5 0 5 5]
                     [5 0 5 5 5 5 5 5 5 5 0 5 5 5 0 5 0 5]
                     [0 5 5 5 5 2 2 5 0 0 5 0 5 5 5 5 5 0]
                     [2 2 5 5 5 2 2 5 0 5 0 0 0 5 5 5 5 5]
                     [2 2 5 5 0 0 5 5 5 5 5 5 5 5 5 2 2 5]
                     [5 0 5 0 5 0 0 0 5 5 5 5 5 5 5 2 2 5]
                     [0 0 5 5 0 0 5 5 5 5 5 5 5 5 5 5 0 5]
                     [5 5 0 5 5 5 0 0 5 0 5 0 0 5 5 5 0 5]
                     [5 5 5 5 5 5 5 5 5 5 5 5 0 5 5 5 5 5]
                     [5 5 5 5 0 0 5 5 5 5 0 5 5 0 0 5 0 0]
                     [0 5 0 0 0 5 0 5 5 0 0 5 5 5 0 0 0 5]
                     [0 0 5 5 5 5 5 0 5 0 5 0 5 0 5 5 0 0]
                     [5 0 5 0 2 2 5 5 5 5 5 5 5 2 2 5 0 5]
                     [5 0 5 5 2 2 0 5 5 5 0 0 0 2 2 5 0 0]
                     [5 5 0 5 2 2 5 0 0 5 5 0 5 0 5 0 5 5]]}
           {:input [[0 0 5 5 5 5 5 5 5 0 0 5 5 5 0 5 5 0]
                    [5 0 0 0 5 5 0 0 0 0 5 0 5 5 0 5 5 5]
                    [0 0 5 5 5 5 0 0 5 5 5 5 0 0 0 5 5 5]
                    [5 5 5 0 5 5 5 5 5 5 0 0 5 5 5 5 5 5]
                    [5 5 0 5 5 5 5 0 5 5 5 5 0 5 0 0 0 0]
                    [5 0 0 5 5 5 5 5 5 0 5 5 5 0 5 0 0 5]
                    [5 5 5 0 5 5 5 0 0 0 5 5 5 5 5 5 5 0]
                    [0 5 5 0 5 5 5 5 0 5 0 0 5 0 5 5 5 0]
                    [5 5 5 5 5 0 5 5 0 5 0 0 0 5 0 5 0 5]
                    [5 0 5 0 5 0 5 5 5 5 0 0 0 5 5 5 5 5]
                    [0 0 5 0 5 5 0 5 5 5 0 0 5 0 5 5 5 5]
                    [5 5 5 5 0 5 5 5 5 0 5 5 5 5 5 0 5 5]
                    [0 0 5 5 5 0 5 5 0 5 5 0 5 0 5 5 5 5]
                    [5 5 0 5 5 5 0 0 0 0 5 0 5 5 0 5 0 0]
                    [0 0 5 5 5 5 0 5 5 0 5 0 0 0 5 0 5 0]
                    [0 5 5 5 5 5 0 5 5 5 0 5 0 5 5 0 0 5]
                    [0 5 5 0 0 5 5 5 0 0 0 5 5 0 5 5 5 5]
                    [5 0 0 5 5 0 5 5 5 5 5 0 5 5 0 0 5 0]]
            :output [[0 0 5 5 5 5 5 5 5 0 0 5 5 5 0 5 5 0]
                     [5 0 0 0 5 5 2 2 0 0 5 0 5 5 0 5 5 5]
                     [0 0 5 5 5 5 2 2 5 5 5 5 0 0 0 5 5 5]
                     [5 5 5 0 5 5 5 5 5 5 0 0 5 5 5 5 5 5]
                     [5 5 0 5 5 5 5 0 5 5 5 5 0 5 0 2 2 0]
                     [5 0 0 5 5 5 5 5 5 0 5 5 5 0 5 2 2 5]
                     [5 5 5 0 5 5 5 0 0 0 5 5 5 5 5 5 5 0]
                     [0 5 5 0 5 5 5 5 0 5 2 2 5 0 5 5 5 0]
                     [5 5 5 5 5 0 5 5 0 5 2 2 0 5 0 5 0 5]
                     [5 0 5 0 5 0 5 5 5 5 2 2 0 5 5 5 5 5]
                     [0 0 5 0 5 5 0 5 5 5 2 2 5 0 5 5 5 5]
                     [5 5 5 5 0 5 5 5 5 0 5 5 5 5 5 0 5 5]
                     [0 0 5 5 5 0 5 5 0 5 5 0 5 0 5 5 5 5]
                     [5 5 0 5 5 5 0 0 0 0 5 0 5 5 0 5 0 0]
                     [0 0 5 5 5 5 0 5 5 0 5 0 0 0 5 0 5 0]
                     [0 5 5 5 5 5 0 5 5 5 0 5 0 5 5 0 0 5]
                     [0 5 5 0 0 5 5 5 0 0 0 5 5 0 5 5 5 5]
                     [5 0 0 5 5 0 5 5 5 5 5 0 5 5 0 0 5 0]]}]})


;; --------------------------------------------------

(comment

  (arc/run-push-on-grid-1
   (-> task
       :test
       first
       :input)
   '((([1 1 0] [1 0 0] [0 0 0]) 0 2 0 3.0 grid_make_ca)
     (grid_ca_apply_rule)
     (([0 0 0] [0 0 1] [0 1 1]) 0 2 2 0.0 grid_make_ca)
     (grid_ca_apply_rule)))

  ;; funny, a version with an edge case in a train task

  (arc/run-task
   task
   '((([1 1 0] [1 0 0] [0 0 0]) 0 2 0 3.0 grid_make_ca)
     (grid_ca_apply_rule)
     (([0 0 0] [0 0 1] [0 1 1]) 0 2 2 0.0 grid_make_ca)
     (grid_ca_apply_rule)))

  ;; :train-success [true true false],
  ;; :test-success [true]
  )
